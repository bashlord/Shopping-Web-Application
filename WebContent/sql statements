CREATE TABLE newSales(
	stateID INT NOT NULL,
	product VARCHAR(30) NOT NULL


);

CREATE TABLE StateProducts AS (" +
            				"SELECT sales.uid, users.name as username, SUM(sales.price*sales.quantity) AS totalCost, sales.pid, products.name as name, SUM(quantity) as quantity, categories.name as cid, states.name as state, states.id as stateID, products.price " +
            				"FROM users, products, sales, categories, states " +
            				"WHERE sales.uid = users.id AND sales.pid = products.id AND categories.id = products.cid AND states.id = users.state " +
            				"GROUP BY username, sales.uid, sales.price, sales.quantity, products.name, sales.pid, products.price, products.cid, states.name, states.id, categories.name " +
            				"ORDER BY SUM(sales.price*sales.quantity) DESC)"



  // Create the prepared statement and use it to
            // INSERT student values INTO the students table.
			String statesQ ="SELECT sp.state as state FROM (SELECT state, totalCost FROM StateProducts) as sp GROUP BY sp.state ORDER BY SUM(totalCost) DESC LIMIT 50 ";
            String q = "SELECT sp.state, sp.name, SUM(totalCost) as totalCost FROM StateProducts AS sp WHERE sp.name IN (SELECT name FROM TopProducts LIMIT 50) AND " +
    				"sp.state IN (SELECT state FROM TopStates) GROUP BY sp.state, sp.name ORDER BY SUM(totalCost) DESC";
            
    		String productsQK = "SELECT name FROM (SELECT name, totalCost FROM StateProducts) as lol"+
					" GROUP BY name ORDER BY SUM(totalCost) DESC LIMIT 50";
            
            Statement dropQ1 = conn.createStatement();
            dropQ1.executeUpdate("DROP TABLE IF EXISTS TopProducts CASCADE");
            Statement dropQ2 = conn.createStatement();
            dropQ2.executeUpdate("DROP TABLE IF EXISTS TopStates CASCADE");
            

            Statement createTable1 = conn.createStatement();
            createTable1.executeUpdate("CREATE TABLE TopStates AS("+ statesQ +")");
            Statement createTable2 = conn.createStatement();
            createTable2.executeUpdate("CREATE TABLE TopProducts AS("+ productsQK +")");
            
    		String getStatesQ = "SELECT state as name FROM TopStates LIMIT 50";
   		 query = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
         result = query.executeQuery(getStatesQ);
            
         String getStatesID = "SELECT sp.stateID FROM (SELECT stateID, totalCost FROM StateProducts) as sp GROUP BY sp.stateID ORDER BY SUM(totalCost) DESC LIMIT 50";
         query = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
         stateIDR = query.executeQuery(getStatesID);
         
         String upProd = "SELECT product FROM newSales GROUP BY product";
   		 query = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
         updatedProducts = query.executeQuery(upProd);
         
         
         
         String getProductsQ = "SELECT name FROM TopProducts LIMIT 50";
         query2 = conn
         .createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
         result2 = query2.executeQuery(getProductsQ);
         query3 = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
         tableFillResult = query3.executeQuery(q);
         
         String productSalesQ = "SELECT name, SUM(totalCost) AS total FROM StateProducts GROUP BY name ORDER BY SUM(totalCost) DESC LIMIT 50";
 		query = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
 		productSalesR = query.executeQuery(productSalesQ);
 		
		String stateTotalQ = "SELECT state as state, SUM(totalCost) as total FROM StateProducts GROUP BY state ORDER BY SUM(totalCost) DESC LIMIT 50";

